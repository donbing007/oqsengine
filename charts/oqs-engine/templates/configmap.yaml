apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ template "oqsengine.fullname" . }}-configmap
    labels:
        app: {{ template "oqsengine.name" . }}
        chart: {{ template "oqsengine.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
data:
    application.yml: |
        instance:
          type: statefulset
          id: 0
        server:
          port: {{ .Values.service.port.http }}
        grpc:
          server:
            port: {{ .Values.service.port.grpc }}
        logging:
          level:
            root: {{ .Values.logger.level }}
        management:
          health:
            redis:
              enabled: false
            db:
              enabled: false
          endpoints:
            enabled-by-default: false
            web:
              exposure:
                include: "*"
          endpoint:
            health:
              enabled: true
              show-details: never
            shutdown:
              enabled: true
            info:
              enabled: true
            prometheus:
              enabled: true
        spring:
          application:
            name: "oqsengine"
        transaction:
          timeoutMs: {{ .Values.storage.transaction.timeoutMs | default "2000" }}
        threadPool:
          io:
            worker: {{ .Values.storage.threadPool.io.worker | default "0" }}
            queue: {{ .Values.storage.threadPool.io.queue | default "1000" }}
          call:
            worker: {{ .Values.storage.threadPool.call.worker | default "0" }}
            queue: {{ .Values.storage.threadPool.call.queue | default "500" }}
          cdc:
            worker: {{ .Values.storage.threadPool.call.worker | default "0" }}
        maxVisibleNumber: {{ .Values.storage.maxVisibleNumber | default "10000" }}
        storage:
          timeoutMs:
            query: {{ .Values.storage.timeoutMs.query | default "3000" }}
          master:
            name: {{ .Values.storage.master.name | default "oqsbigentity" | quote }}
            shard:
              table:
                enabled: {{ .Values.storage.master.shard.table.enabled | default "false" }}
                size: {{ .Values.storage.master.shard.table.size | default "3" }}
          index:
            search:
              name: {{ .Values.storage.index.search.name | default "oqsindex" | quote }}
              maxQueryTimeMs: {{ .Values.storage.index.search.maxQueryTimeMs | default "0" }}
            write:
              name: {{ .Values.storage.index.write.name | default "oqsindex" | quote }}
              shard:
                enabled: {{ .Values.storage.index.write.shard.enabled | default "false" }}
                size: {{ .Values.storage.index.write.shard.size | default "1" }}
          devOps:
            cdc:
              errors:
                name: {{ .Values.storage.devOps.cdc.errors.name | default "cdcerrors" | quote }}
            maxQueryTimeMs: {{ .Values.storage.devOps.maxQueryTimeMs | default "3000" }}
            task:
              split: {{ .Values.devops.task.split | default "10" }}
              max:
                queue:
                  size: {{ .Values.devops.task.max.queue.size | default "2000" }}
              execution:
                timeout: {{ .Values.devops.task.execution.timeout | default "30000" }}
              update:
                frequency: {{ .Values.devops.task.update.frequency | default "100" }}
              cache:
                expire: {{ .Values.devops.task.cache.expire | default "30" }}
                maxsize: {{ .Values.devops.task.cache.maxsize | default "500" }}
              page:
                size: {{ .Values.devops.task.page.size | default "1000" }}
          distribute:
            lock:
              type: {{ .Values.distribute.lock.type | default "process" }}
              handler: {{ .Values.distribute.lock.handler | default "local" }}
              on: {{ .Values.distribute.lock.on | default "true" }}
              wait:
                timeout:
                  seconds: {{ .Values.distribute.lock.wait.timeout.seconds | default "30" }}
                maxUnLockRetry: {{ .Values.distribute.lock.maxUnLockRetry | default "0" }}


        redis:
          uri: {{ .Values.redis.uri | default "redis://localhost:6379" | quote}}
          maxReqQueue: {{ .Values.redis.maxReqQueue | default "2147483647" }}
        sync:
          allowMaxSyncTimeMs: {{ .Values.sync.allowMaxSyncTimeMs | default "10000"}}
          allowMaxLiveTimeMs: {{ .Values.sync.allowMaxLiveTimeMs | default "3000" }}
        cdc:
          connect:
            type: {{ .Values.cdc.connect.type }}
            string: {{ .Values.cdc.connect.string }}
            port: {{ .Values.cdc.connect.port }}
            destination: {{ template "oqsengine.fullname" . }}-0
            username: {{ .Values.cdc.connect.username }}
            password: {{ .Values.cdc.connect.password }}
            subscribeFilter: {{ .Values.cdc.connect.subscribeFilter | quote }}
            batchSize: {{ .Values.cdc.connect.batchSize | default "2048" | quote }}
          execution:
            timeoutMs: {{ .Values.cdc.execution.timeoutMs | default "30000" | quote }}
            single:
              consumer: {{ .Values.cdc.execution.single.consumer | default "true" | quote }}
    oqsengine-ds.conf: |
        {
          "dataSources": {
            "index": {
              "write": [
            {{ .Values.datasource.index.write | indent 11 }}
              ],
              "search": [
            {{ .Values.datasource.index.search | indent 11 }}
              ]
            },
            "master": [
            {{ .Values.datasource.master | indent 9 }}
            ]
          },
          akka {
            loglevel = "INFO"
          }
        }



