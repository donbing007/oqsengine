image: registry.cn-hangzhou.aliyuncs.com/xforceplus/cibase:std-cibase-0.0.1


stages:
  - mvn-package
  - tag-mvn-deploy
  - docker-build

maven-build:
  stage: mvn-package
  coverage: '/Total.*?([0-9]{1,3})%/'
  variables:
    containerServerName: "oqs_container_provider"
    containerServerPort: 9898
  before_script:
    - export CONTAINER_SERVER_HOST=$(docker inspect -f "{{ .NetworkSettings.IPAddress }}" ${containerServerName})
  script:
    - echo ${CI_JOB_ID}
    - update_pom_version
    - mvn clean install -U -s ./.mvn/wrapper/settings.xml -Drequest.uuid=${CI_JOB_ID} -Dcontainer.server.host=${CONTAINER_SERVER_HOST} -Dcontainer.server.port=${containerServerPort}
    - cat target/site/jacoco/index.html
    - mkdir -p /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    - cp ./target/xplat-meta-oqsengine.jar /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/app.jar
#    - apt-get --assume-yes install zip unzip
#    - zip -q -r allure-results.zip ./allure-results
#    - cp ./allure-results.zip /
#    - result=$(curl -X POST 'http://ultraman-test.phoenix-t.xforceplus.com/api/result'  -H "Content-Type:multipart/form-data"  -F "allureResults=@allure-results.zip;type=application/x-zip-compressed" | cut -c42-77)
#    - report=$(curl -X POST 'http://ultraman-test.phoenix-t.xforceplus.com/api/report'  -H  "Content-Type:application/json" -d "{\"reportSpec\":{\"path\":[\"master\"]},\"results\":[\"$result\"],\"deleteResults\":false}" | cut -c71-168)
#    - echo report url is:$report
#    - curl 'https://oapi.dingtalk.com/robot/send?access_token=0c6feb7b10edeb4f8a47a91f2de8ce6fd3c4f71758b434583a99ab24d3598549' -H "Content-Type:application/json" -d "{\"at\":{\"isAtAll\":true},\"msgtype\":'text',\"text\":{\"content\":\"Oqs-engine单元测试报告-${CI_COMMIT_TAG} :$report   \"}}"
  after_script:
    - export CONTAINER_SERVER_HOST=$(docker inspect -f "{{ .NetworkSettings.IPAddress }}" ${containerServerName})
    - echo "http://${CONTAINER_SERVER_HOST}:${containerServerPort}/container-providers/destroy/${CI_JOB_ID}"
    - curl -X GET "http://${CONTAINER_SERVER_HOST}:${containerServerPort}/container-providers/destroy/${CI_JOB_ID}"
  except:
    - tags

tag-mvn-deploy:
  stage: tag-mvn-deploy
  coverage: '/Total.*?([0-9]{1,3})%/'
  script:
    - update_pom_version
    - mvn clean deploy -s ./.mvn/wrapper/settings.xml -Dmaven.test.skip=true
    - mkdir -p /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    - cp ./target/xplat-meta-oqsengine.jar /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/app.jar
  only:
    - tags

docker-build:
  stage: docker-build
  script:
    - docker_build
    - chart_build
  except:
    - /^.*-sdk$/

.auto_devops: &auto_devops |
  http_status_code=`curl -o .auto_devops.sh -s -m 10 --connect-timeout 10 -w %{http_code} "${CHOERODON_URL}/devops/ci?token=${Token}&type=microservice"`
  if [ "$http_status_code" != "200" ]; then
    cat .auto_devops.sh
    exit 1
  fi
  source .auto_devops.sh
  function docker_build(){
      cp /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/app.jar ${1:-"docker"}/app.jar || true
      docker build --pull -t ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG} ${1:-"docker"}
      docker tag ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG} ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:latest
      docker login ${DOCKER_REGISTRY} -u ${DOCKER_USER} -p ${DOCKER_PWD}
      docker push ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}
      rm -rf /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
  }

.mvnwfix: &mvnwfix |
  export MAVEN_CONFIG=''

before_script:
  - *mvnwfix
  - *auto_devops
