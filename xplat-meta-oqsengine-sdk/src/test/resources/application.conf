akka.grpc.client {
  "CheckService" {
    service-discovery {
      service-name = "CheckService"
    }
//        host = localhost
//        port = 8081
//        host = "localhost"
    host = "120.55.249.44"
//    host = "bocp-grpc.phoenix-t.xforceplus.com"
    host = ${?BOCP_SERVER_HOST}
//    port = 443
    port = 23111
//        port = 8081
    port = ${?BOCP_SERVER_PORT}
//    override-authority = "bocp-grpc.phoenix-t.xforceplus.com"
    deadline = infinite
    use-tls = false
    use-tls = ${?USE_TLS}
  }

  "NodeService" {
    service-discovery {
      service-name = "NodeService"
    }
//    host = localhost
//    port = 8081
    //    host = "localhost"
    host = "120.55.249.44"
    host = ${?BOCP_SERVER_HOST}
    port = 23111
    //    port = 8081
    port = ${?BOCP_SERVER_PORT}
    deadline = infinite
    use-tls = false
    use-tls = ${?USE_TLS}
  }

  "EntityService" {
    service-discovery {
      service-name = "EntityService"
    }
//
//    host = "localhost"
    host = "120.55.249.44"
    host = ${?OQSENGINE_SERVER_HOST}
//        port = 8082
    port = 23114
    port = ${?OQSENGINE_SERVER_HOST}
    deadline = infinite
    use-tls = false
    use-tls = ${?USE_TLS}
  }

  "DictCheckService" {
    service-discovery {
      service-name = "DictCheckService"
    }
//        host = "localhost"
    //    host = "localhost"
    host = "120.55.249.44"
//        port = 8081
    host = ${?BOCP_SERVER_HOST}
    port = 23111
    //    port = 8081
    port = ${?BOCP_SERVER_PORT}
    deadline = infinite
    use-tls = false
    use-tls = ${?USE_TLS}
  }
}

akka {
  loglevel = "INFO"
}


pfcp {
  accessUri = "https://ultraman-t.xforcecloud.com/pfcp"
  accessUri = ${?PFCP_ACCESSURI}
}


my-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}
